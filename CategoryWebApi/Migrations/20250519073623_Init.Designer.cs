// <auto-generated />
using CategoryWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CategoryWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250519073623_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryWebApi.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Wellness & Relax"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Workout & Gym"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Festival & Fun"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Food & Drinks"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Travel & Adventure"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Sports & Outdoors"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Music & Concerts"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Arts & Crafts"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Education & Learning"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Technology & Gadgets"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
